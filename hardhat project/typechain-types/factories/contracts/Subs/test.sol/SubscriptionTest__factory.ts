/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SubscriptionTest,
  SubscriptionTestInterface,
} from "../../../../contracts/Subs/test.sol/SubscriptionTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subscriptionAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cancelDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chargeSubscription",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInSeconds",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastChargeTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d2d380380610d2d833981810160405281019061003291906100dc565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360006101000a81548160ff021916908315150217905550806004819055504260058190555050610109565b600080fd5b6000819050919050565b6100b9816100a6565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f16100a1565b5b6000610100848285016100c7565b91505092915050565b610c15806101186000396000f3fe6080604052600436106100915760003560e01c80638258bb86116100595780638258bb86146101455780638da5cb5b1461017057806395ee12211461019b578063dfa9b749146101c6578063e2bbb158146101d057610091565b80633ccfd60b146100965780633d561602146100ad578063419759f5146100c457806354f8a8c2146100ef5780635e8a626e1461011a575b600080fd5b3480156100a257600080fd5b506100ab6101ec565b005b3480156100b957600080fd5b506100c261037a565b005b3480156100d057600080fd5b506100d9610450565b6040516100e69190610655565b60405180910390f35b3480156100fb57600080fd5b50610104610456565b6040516101119190610655565b60405180910390f35b34801561012657600080fd5b5061012f61045c565b60405161013c9190610655565b60405180910390f35b34801561015157600080fd5b5061015a610462565b6040516101679190610655565b60405180910390f35b34801561017c57600080fd5b50610185610468565b60405161019291906106b1565b60405180910390f35b3480156101a757600080fd5b506101b061048c565b6040516101bd91906106e7565b60405180910390f35b6101ce61049f565b005b6101ea60048036038101906101e59190610733565b6105a6565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610271906107f6565b60405180910390fd5b6002544210156102bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b690610862565b60405180910390fd5b600360009054906101000a900460ff161561030f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610306906108ce565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610377573d6000803e3d6000fd5b50565b600360009054906101000a900460ff16156103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c190610960565b60405180910390fd5b6001600360006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f1935050505015801561044d573d6000803e3d6000fd5b50565b60015481565b60045481565b60025481565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900460ff1681565b62278d006005546104b091906109af565b4210156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990610a55565b60405180910390fd5b6004543414610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d90610ae7565b60405180910390fd5b4260058190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156105a3573d6000803e3d6000fd5b50565b8134146105e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105df90610b53565b60405180910390fd5b42811161062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190610bbf565b60405180910390fd5b81600181905550806002819055505050565b6000819050919050565b61064f8161063c565b82525050565b600060208201905061066a6000830184610646565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069b82610670565b9050919050565b6106ab81610690565b82525050565b60006020820190506106c660008301846106a2565b92915050565b60008115159050919050565b6106e1816106cc565b82525050565b60006020820190506106fc60008301846106d8565b92915050565b600080fd5b6107108161063c565b811461071b57600080fd5b50565b60008135905061072d81610707565b92915050565b6000806040838503121561074a57610749610702565b5b60006107588582860161071e565b92505060206107698582860161071e565b9150509250929050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e207769746864726177207468652060008201527f6465706f73697400000000000000000000000000000000000000000000000000602082015250565b60006107e0602783610773565b91506107eb82610784565b604082019050919050565b6000602082019050818103600083015261080f816107d3565b9050919050565b7f4465706f7369742074696d6520686173206e6f74207061737365642079657400600082015250565b600061084c601f83610773565b915061085782610816565b602082019050919050565b6000602082019050818103600083015261087b8161083f565b9050919050565b7f4465706f73697420686173206265656e2063616e63656c6c6564000000000000600082015250565b60006108b8601a83610773565b91506108c382610882565b602082019050919050565b600060208201905081810360008301526108e7816108ab565b9050919050565b7f4465706f7369742068617320616c7265616479206265656e2063616e63656c6c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b600061094a602283610773565b9150610955826108ee565b604082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba8261063c565b91506109c58361063c565b92508282019050808211156109dd576109dc610980565b5b92915050565b7f4e6f7420656e6f7567682074696d6520686173207061737365642073696e636560008201527f20746865206c6173742063686172676500000000000000000000000000000000602082015250565b6000610a3f603083610773565b9150610a4a826109e3565b604082019050919050565b60006020820190508181036000830152610a6e81610a32565b9050919050565b7f537562736372697074696f6e20616d6f756e7420646f6573206e6f74206d617460008201527f6368000000000000000000000000000000000000000000000000000000000000602082015250565b6000610ad1602283610773565b9150610adc82610a75565b604082019050919050565b60006020820190508181036000830152610b0081610ac4565b9050919050565b7f4465706f73697420616d6f756e7420646f6573206e6f74206d61746368000000600082015250565b6000610b3d601d83610773565b9150610b4882610b07565b602082019050919050565b60006020820190508181036000830152610b6c81610b30565b9050919050565b7f496e76616c6964206465706f7369742074696d65000000000000000000000000600082015250565b6000610ba9601483610773565b9150610bb482610b73565b602082019050919050565b60006020820190508181036000830152610bd881610b9c565b905091905056fea26469706673582212208f17ece5cd5a55476913b7dea40d9a59376b5739a994bbcbf724a1987b5b54cc64736f6c63430008130033";

type SubscriptionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscriptionTest__factory extends ContractFactory {
  constructor(...args: SubscriptionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _subscriptionAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_subscriptionAmount, overrides || {});
  }
  override deploy(
    _subscriptionAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_subscriptionAmount, overrides || {}) as Promise<
      SubscriptionTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SubscriptionTest__factory {
    return super.connect(runner) as SubscriptionTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionTestInterface {
    return new Interface(_abi) as SubscriptionTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubscriptionTest {
    return new Contract(address, _abi, runner) as unknown as SubscriptionTest;
  }
}
