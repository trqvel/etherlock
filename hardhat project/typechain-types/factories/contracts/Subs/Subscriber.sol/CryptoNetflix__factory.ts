/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CryptoNetflix,
  CryptoNetflixInterface,
} from "../../../../contracts/Subs/Subscriber.sol/CryptoNetflix";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_addressToWithdraw",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_howManySubscriptions",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressToWithdraw",
        type: "address",
      },
    ],
    name: "getSubscriptionsData",
    outputs: [
      {
        internalType: "uint256[]",
        name: "paidSubscriptions",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "unpaidSubscriptions",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "cancelledSubscriptions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makeScheduledPayments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "subscriptionKeys",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addressToWithdraw",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "howManySubscriptions",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCancelled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611438806100606000396000f3fe6080604052600436106100705760003560e01c80635a419d311161004e5780635a419d31146100ba578063bc157ac1146100f9578063de036f1314610115578063f046395a1461015257610070565b8063146ad1a41461007557806324e9edb01461008c5780633ccfd60b146100a3575b600080fd5b34801561008157600080fd5b5061008a610194565b005b34801561009857600080fd5b506100a1610346565b005b3480156100af57600080fd5b506100b86104bd565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610d64565b6105fd565b6040516100f093929190610e59565b60405180910390f35b610113600480360381019061010e9190610ed1565b610a11565b005b34801561012157600080fd5b5061013c60048036038101906101379190610f24565b610c59565b6040516101499190610f60565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190610d64565b610c98565b60405161018b96959493929190610fa5565b60405180910390f35b60005b60028054905081101561034357600060016000600284815481106101be576101bd611006565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411801561024e5750600015158160050160009054906101000a900460ff161515145b801561026d5750806001015481600401546102699190611064565b4210155b1561032f57806004016000815480929190610287906110a6565b91905055508060030154816004015411156102be5760018160050160006101000a81548160ff02191690831515021790555061032e565b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600001549081150290604051600060405180830381858888f1935050505015801561032c573d6000803e3d6000fd5b505b5b50808061033b906110a6565b915050610197565b50565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154116103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c29061114b565b60405180910390fd5b60001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff16151514610461576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610458906111b7565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160006101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054290611223565b60405180910390fd5b600047905060008111610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a906112b5565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105f9573d6000803e3d6000fd5b5050565b60608060606000806000805b60028054905081101561075f57600060016000600284815481106106305761062f611006565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508873ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361074b578060050160009054906101000a900460ff1615610718578280610710906110a6565b93505061074a565b806003015481600401541061073a578480610732906110a6565b955050610749565b8380610745906110a6565b9450505b5b5b508080610757906110a6565b915050610609565b508267ffffffffffffffff81111561077a576107796112d5565b5b6040519080825280602002602001820160405280156107a85781602001602082028036833780820191505090505b5095508167ffffffffffffffff8111156107c5576107c46112d5565b5b6040519080825280602002602001820160405280156107f35781602001602082028036833780820191505090505b5094508067ffffffffffffffff8111156108105761080f6112d5565b5b60405190808252806020026020018201604052801561083e5781602001602082028036833780820191505090505b50935060009250600091506000905060005b600280549050811015610a06576000600160006002848154811061087757610876611006565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508873ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109f2578060050160009054906101000a900460ff161561097f57818684815181106109605761095f611006565b5b6020026020010181815250508280610977906110a6565b9350506109f1565b80600301548160040154106109c157818886815181106109a2576109a1611006565b5b60200260200101818152505084806109b9906110a6565b9550506109f0565b818785815181106109d5576109d4611006565b5b60200260200101818152505083806109ec906110a6565b9450505b5b5b5080806109fe906110a6565b915050610850565b505050509193909250565b60003411610a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4b90611376565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610ad9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad0906113e2565b60405180910390fd5b6040518060c001604052803481526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016000815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60028181548110610c6957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff16905086565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3182610d06565b9050919050565b610d4181610d26565b8114610d4c57600080fd5b50565b600081359050610d5e81610d38565b92915050565b600060208284031215610d7a57610d79610d01565b5b6000610d8884828501610d4f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610dd081610dbd565b82525050565b6000610de28383610dc7565b60208301905092915050565b6000602082019050919050565b6000610e0682610d91565b610e108185610d9c565b9350610e1b83610dad565b8060005b83811015610e4c578151610e338882610dd6565b9750610e3e83610dee565b925050600181019050610e1f565b5085935050505092915050565b60006060820190508181036000830152610e738186610dfb565b90508181036020830152610e878185610dfb565b90508181036040830152610e9b8184610dfb565b9050949350505050565b610eae81610dbd565b8114610eb957600080fd5b50565b600081359050610ecb81610ea5565b92915050565b600080600060608486031215610eea57610ee9610d01565b5b6000610ef886828701610ebc565b9350506020610f0986828701610d4f565b9250506040610f1a86828701610ebc565b9150509250925092565b600060208284031215610f3a57610f39610d01565b5b6000610f4884828501610ebc565b91505092915050565b610f5a81610d26565b82525050565b6000602082019050610f756000830184610f51565b92915050565b610f8481610dbd565b82525050565b60008115159050919050565b610f9f81610f8a565b82525050565b600060c082019050610fba6000830189610f7b565b610fc76020830188610f7b565b610fd46040830187610f51565b610fe16060830186610f7b565b610fee6080830185610f7b565b610ffb60a0830184610f96565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106f82610dbd565b915061107a83610dbd565b925082820261108881610dbd565b9150828204841483151761109f5761109e611035565b5b5092915050565b60006110b182610dbd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110e3576110e2611035565b5b600182019050919050565b600082825260208201905092915050565b7f537562736372697074696f6e20646f65736e2774206578697374000000000000600082015250565b6000611135601a836110ee565b9150611140826110ff565b602082019050919050565b6000602082019050818103600083015261116481611128565b9050919050565b7f537562736372697074696f6e20616c72656164792063616e63656c6c65640000600082015250565b60006111a1601e836110ee565b91506111ac8261116b565b602082019050919050565b600060208201905081810360008301526111d081611194565b9050919050565b7f4f6e6c79206f776e65722063616e2077697468647261772066756e6473000000600082015250565b600061120d601d836110ee565b9150611218826111d7565b602082019050919050565b6000602082019050818103600083015261123c81611200565b9050919050565b7f4e6f2066756e647320617661696c61626c6520666f722077697468647261776160008201527f6c00000000000000000000000000000000000000000000000000000000000000602082015250565b600061129f6021836110ee565b91506112aa82611243565b604082019050919050565b600060208201905081810360008301526112ce81611292565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4465706f73697420616d6f756e742073686f756c64206265206772656174657260008201527f207468616e203000000000000000000000000000000000000000000000000000602082015250565b60006113606027836110ee565b915061136b82611304565b604082019050919050565b6000602082019050818103600083015261138f81611353565b9050919050565b7f537562736372697074696f6e20616c7265616479206578697374730000000000600082015250565b60006113cc601b836110ee565b91506113d782611396565b602082019050919050565b600060208201905081810360008301526113fb816113bf565b905091905056fea2646970667358221220212e893c26ba2b365fc8bb240e88fe0b8ae9e9c002922fbd503dfbdd007146da64736f6c63430008130033";

type CryptoNetflixConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoNetflixConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoNetflix__factory extends ContractFactory {
  constructor(...args: CryptoNetflixConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CryptoNetflix & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CryptoNetflix__factory {
    return super.connect(runner) as CryptoNetflix__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoNetflixInterface {
    return new Interface(_abi) as CryptoNetflixInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CryptoNetflix {
    return new Contract(address, _abi, runner) as unknown as CryptoNetflix;
  }
}
