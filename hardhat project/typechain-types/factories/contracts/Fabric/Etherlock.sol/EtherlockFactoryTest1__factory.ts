/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EtherlockFactoryTest1,
  EtherlockFactoryTest1Interface,
} from "../../../../contracts/Fabric/Etherlock.sol/EtherlockFactoryTest1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ContractCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contractLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contractOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxContracts",
        type: "uint256",
      },
    ],
    name: "createContract",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "createContractWithDefault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f09806100206000396000f3fe6080604052600436106100555760003560e01c80632d2a16c81461005a578063474da79a146100715780636215be77146100ae5780636d55b6e9146100d75780639db8d7d514610114578063c801bd5714610130575b600080fd5b34801561006657600080fd5b5061006f61016d565b005b34801561007d57600080fd5b506100986004803603810190610093919061069d565b610179565b6040516100a5919061070b565b60405180910390f35b3480156100ba57600080fd5b506100d560048036038101906100d0919061069d565b6101b8565b005b3480156100e357600080fd5b506100fe60048036038101906100f99190610752565b610355565b60405161010b919061070b565b60405180910390f35b61012e6004803603810190610129919061069d565b610388565b005b34801561013c57600080fd5b5061015760048036038101906101529190610752565b61063d565b604051610164919061078e565b60405180910390f35b6101776001610388565b565b6000818154811061018957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027d9061082c565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663338b5dea33836040518363ffffffff1660e01b815260040161032092919061084c565b600060405180830381600087803b15801561033a57600080fd5b505af115801561034e573d6000803e3d6000fd5b5050505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081116103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c2906108c1565b60405180910390fd5b670de0b6b3a7640000816103df9190610910565b341015610421576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104189061099e565b60405180910390fd5b60005b818110156106395760008080549050905060003360405161044490610655565b61044e919061070b565b604051809103906000f08015801561046a573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160008085815481106104e8576104e76109be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906105db906109ed565b91905055503373ffffffffffffffffffffffffffffffffffffffff16827f9c275c9d7bdddb2ca162a8f5e9d3bbbf2922accedfd8372561a6211fc4e3814660405160405180910390a350508080610631906109ed565b915050610424565b5050565b60026020528060005260406000206000915090505481565b61049e80610a3683390190565b600080fd5b6000819050919050565b61067a81610667565b811461068557600080fd5b50565b60008135905061069781610671565b92915050565b6000602082840312156106b3576106b2610662565b5b60006106c184828501610688565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106f5826106ca565b9050919050565b610705816106ea565b82525050565b600060208201905061072060008301846106fc565b92915050565b61072f816106ea565b811461073a57600080fd5b50565b60008135905061074c81610726565b92915050565b60006020828403121561076857610767610662565b5b60006107768482850161073d565b91505092915050565b61078881610667565b82525050565b60006020820190506107a3600083018461077f565b92915050565b600082825260208201905092915050565b7f4e6f20636f6e74726163747320666f756e6420666f72207468652073656e646560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006108166021836107a9565b9150610821826107ba565b604082019050919050565b6000602082019050818103600083015261084581610809565b9050919050565b600060408201905061086160008301856106fc565b61086e602083018461077f565b9392505050565b7f496e76616c6964206e756d626572206f6620636f6e7472616374730000000000600082015250565b60006108ab601b836107a9565b91506108b682610875565b602082019050919050565b600060208201905081810360008301526108da8161089e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061091b82610667565b915061092683610667565b925082820261093481610667565b9150828204841483151761094b5761094a6108e1565b5b5092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006109886012836107a9565b915061099382610952565b602082019050919050565b600060208201905081810360008301526109b78161097b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109f882610667565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a2a57610a296108e1565b5b60018201905091905056fe608060405234801561001057600080fd5b5060405161049e38038061049e833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610387806101176000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806327e235e314610046578063338b5dea14610076578063ce606ee014610092575b600080fd5b610060600480360381019061005b91906101f7565b6100b0565b60405161006d919061023d565b60405180910390f35b610090600480360381019061008b9190610284565b6100c8565b005b61009a610170565b6040516100a791906102d3565b60405180910390f35b60016020528060005260406000206000915090505481565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610117919061031d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610164919061023d565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101c482610199565b9050919050565b6101d4816101b9565b81146101df57600080fd5b50565b6000813590506101f1816101cb565b92915050565b60006020828403121561020d5761020c610194565b5b600061021b848285016101e2565b91505092915050565b6000819050919050565b61023781610224565b82525050565b6000602082019050610252600083018461022e565b92915050565b61026181610224565b811461026c57600080fd5b50565b60008135905061027e81610258565b92915050565b6000806040838503121561029b5761029a610194565b5b60006102a9858286016101e2565b92505060206102ba8582860161026f565b9150509250929050565b6102cd816101b9565b82525050565b60006020820190506102e860008301846102c4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061032882610224565b915061033383610224565b925082820190508082111561034b5761034a6102ee565b5b9291505056fea26469706673582212209b234386ff8d87e8c34b3004e485207640715d704e0657c429c252a75c23f96564736f6c63430008130033a26469706673582212200cfb0c4c6ee3c0f030e9c0b40e9cd9122da16f24847fb59813e6dd8bf49ae6e664736f6c63430008130033";

type EtherlockFactoryTest1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtherlockFactoryTest1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtherlockFactoryTest1__factory extends ContractFactory {
  constructor(...args: EtherlockFactoryTest1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EtherlockFactoryTest1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EtherlockFactoryTest1__factory {
    return super.connect(runner) as EtherlockFactoryTest1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherlockFactoryTest1Interface {
    return new Interface(_abi) as EtherlockFactoryTest1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EtherlockFactoryTest1 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EtherlockFactoryTest1;
  }
}
