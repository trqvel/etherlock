/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ContractFactory,
  ContractFactoryInterface,
} from "../../../../contracts/Fabric/Etherlock.sol/ContractFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contractCount",
        type: "uint256",
      },
    ],
    name: "ContractCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "contractCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numberOfContracts",
        type: "uint256",
      },
    ],
    name: "createContracts",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b1d806100206000396000f3fe6080604052600436106100345760003560e01c80633208aae114610039578063474da79a146100555780638736381a14610092575b600080fd5b610053600480360381019061004e9190610292565b6100bd565b005b34801561006157600080fd5b5061007c60048036038101906100779190610292565b610211565b6040516100899190610300565b60405180910390f35b34801561009e57600080fd5b506100a7610244565b6040516100b4919061032a565b60405180910390f35b66038d7ea4c68000816100d09190610374565b3414610111576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010890610413565b60405180910390fd5b60005b8181101561020d5760003360405161012b9061024a565b6101359190610300565b604051809103906000f080158015610151573d6000803e3d6000fd5b50905080600160008054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808154809291906101b990610433565b91905055507f1dc05c1d6a563dddb6c22082af72b54ec2f0207ceb55db5d13cdabc208f303a9816000546040516101f192919061047b565b60405180910390a150808061020590610433565b915050610114565b5050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b610643806104a583390190565b600080fd5b6000819050919050565b61026f8161025c565b811461027a57600080fd5b50565b60008135905061028c81610266565b92915050565b6000602082840312156102a8576102a7610257565b5b60006102b68482850161027d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102ea826102bf565b9050919050565b6102fa816102df565b82525050565b600060208201905061031560008301846102f1565b92915050565b6103248161025c565b82525050565b600060208201905061033f600083018461031b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061037f8261025c565b915061038a8361025c565b92508282026103988161025c565b915082820484148315176103af576103ae610345565b5b5092915050565b600082825260208201905092915050565b7f496e636f727265637420616d6f756e74206f662065746865722073656e742e00600082015250565b60006103fd601f836103b6565b9150610408826103c7565b602082019050919050565b6000602082019050818103600083015261042c816103f0565b9050919050565b600061043e8261025c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104705761046f610345565b5b600182019050919050565b600060408201905061049060008301856102f1565b61049d602083018461031b565b939250505056fe608060405234801561001057600080fd5b50604051610643380380610643833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b61052c806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633ccfd60b146100515780634ca2e5291461005b5780638da5cb5b146100775780639f181b5e14610095575b600080fd5b6100596100b3565b005b610075600480360381019061007091906102f7565b6101b1565b005b61007f610292565b60405161008c9190610365565b60405180910390f35b61009d6102b6565b6040516100aa919061038f565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013890610407565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c680009081150290604051600060405180830381858888f193505050501580156101ae573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023690610473565b60405180910390fd5b806001600082825461025191906104c2565b925050819055507f3cff44951c4b5e74e5538c670e59c727f11f18debf00bdcb10a69d3c29d9741181604051610287919061038f565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600080fd5b6000819050919050565b6102d4816102c1565b81146102df57600080fd5b50565b6000813590506102f1816102cb565b92915050565b60006020828403121561030d5761030c6102bc565b5b600061031b848285016102e2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061034f82610324565b9050919050565b61035f81610344565b82525050565b600060208201905061037a6000830184610356565b92915050565b610389816102c1565b82525050565b60006020820190506103a46000830184610380565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2077697468647261772e00000000600082015250565b60006103f1601c836103aa565b91506103fc826103bb565b602082019050919050565b60006020820190508181036000830152610420816103e4565b9050919050565b7f4f6e6c7920746865206f776e65722063616e2064726f7020746f6b656e732e00600082015250565b600061045d601f836103aa565b915061046882610427565b602082019050919050565b6000602082019050818103600083015261048c81610450565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104cd826102c1565b91506104d8836102c1565b92508282019050808211156104f0576104ef610493565b5b9291505056fea26469706673582212209994ce76bc06380539e850aca054ee3cf4671d6575211986a3e853bd8898d9b464736f6c63430008130033a26469706673582212204b64d02f2b2dfd58122d0160e80ec23f222eac79e17ab1c18233dfb793e96faa64736f6c63430008130033";

type ContractFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractFactory__factory extends ContractFactory {
  constructor(...args: ContractFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContractFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContractFactory__factory {
    return super.connect(runner) as ContractFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractFactoryInterface {
    return new Interface(_abi) as ContractFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContractFactory {
    return new Contract(address, _abi, runner) as unknown as ContractFactory;
  }
}
