/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MyContract,
  MyContractInterface,
} from "../../../../contracts/Fabric/Fabric.sol/MyContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fca38038062001fca83398181016040528101906200003791906200032e565b6040518060400160405280600981526020017f45544845524c4f434b00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f45484c00000000000000000000000000000000000000000000000000000000008152508160039081620000b49190620005da565b508060049081620000c69190620005da565b50505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000146600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400006200014d60201b60201c565b50620007dc565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b69062000722565b60405180910390fd5b620001d360008383620002ba60201b60201c565b8060026000828254620001e7919062000773565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200029a9190620007bf565b60405180910390a3620002b660008383620002bf60201b60201c565b5050565b505050565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002f682620002c9565b9050919050565b6200030881620002e9565b81146200031457600080fd5b50565b6000815190506200032881620002fd565b92915050565b600060208284031215620003475762000346620002c4565b5b6000620003578482850162000317565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003e257607f821691505b602082108103620003f857620003f76200039a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004627fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000423565b6200046e868362000423565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004bb620004b5620004af8462000486565b62000490565b62000486565b9050919050565b6000819050919050565b620004d7836200049a565b620004ef620004e682620004c2565b84845462000430565b825550505050565b600090565b62000506620004f7565b62000513818484620004cc565b505050565b5b818110156200053b576200052f600082620004fc565b60018101905062000519565b5050565b601f8211156200058a576200055481620003fe565b6200055f8462000413565b810160208510156200056f578190505b620005876200057e8562000413565b83018262000518565b50505b505050565b600082821c905092915050565b6000620005af600019846008026200058f565b1980831691505092915050565b6000620005ca83836200059c565b9150826002028217905092915050565b620005e58262000360565b67ffffffffffffffff8111156200060157620006006200036b565b5b6200060d8254620003c9565b6200061a8282856200053f565b600060209050601f8311600181146200065257600084156200063d578287015190505b620006498582620005bc565b865550620006b9565b601f1984166200066286620003fe565b60005b828110156200068c5784890151825560018201915060208501945060208101905062000665565b86831015620006ac5784890151620006a8601f8916826200059c565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006200070a601f83620006c1565b91506200071782620006d2565b602082019050919050565b600060208201905081810360008301526200073d81620006fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007808262000486565b91506200078d8362000486565b9250828201905080821115620007a857620007a762000744565b5b92915050565b620007b98162000486565b82525050565b6000602082019050620007d66000830184620007ae565b92915050565b6117de80620007ec6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b4114610228578063a457c2d714610246578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b806339509351146101aa57806370a08231146101da5780638da5cb5b1461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd146101405780632e1a7d4d14610170578063313ce5671461018c575b600080fd5b6100dc6102d6565b6040516100e99190610eb8565b60405180910390f35b61010c60048036038101906101079190610f73565b610368565b6040516101199190610fce565b60405180910390f35b61012a61038b565b6040516101379190610ff8565b60405180910390f35b61015a60048036038101906101559190611013565b610395565b6040516101679190610fce565b60405180910390f35b61018a60048036038101906101859190611066565b6103c4565b005b610194610516565b6040516101a191906110af565b60405180910390f35b6101c460048036038101906101bf9190610f73565b61051f565b6040516101d19190610fce565b60405180910390f35b6101f460048036038101906101ef91906110ca565b610556565b6040516102019190610ff8565b60405180910390f35b61021261059e565b60405161021f9190611106565b60405180910390f35b6102306105c4565b60405161023d9190610eb8565b60405180910390f35b610260600480360381019061025b9190610f73565b610656565b60405161026d9190610fce565b60405180910390f35b610290600480360381019061028b9190610f73565b6106cd565b60405161029d9190610fce565b60405180910390f35b6102c060048036038101906102bb9190611121565b61076e565b6040516102cd9190610ff8565b60405180910390f35b6060600380546102e590611190565b80601f016020809104026020016040519081016040528092919081815260200182805461031190611190565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b6000806103736107f5565b90506103808185856107fd565b600191505092915050565b6000600254905090565b6000806103a06107f5565b90506103ad8582856109c6565b6103b8858585610a52565b60019150509392505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044b90611233565b60405180910390fd5b47811115610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e9061129f565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000836104e791906112ee565b9081150290604051600060405180830381858888f19350505050158015610512573d6000803e3d6000fd5b5050565b60006012905090565b60008061052a6107f5565b905061054b81858561053c858961076e565b6105469190611330565b6107fd565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546105d390611190565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff90611190565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b5050505050905090565b6000806106616107f5565b9050600061066f828661076e565b9050838110156106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab906113d6565b60405180910390fd5b6106c182868684036107fd565b60019250505092915050565b60006106da338484610a52565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361076457610763600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a7640000610cc8565b5b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086390611468565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d2906114fa565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109b99190610ff8565b60405180910390a3505050565b60006109d2848461076e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a4c5781811015610a3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3590611566565b60405180910390fd5b610a4b84848484036107fd565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab8906115f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b279061168a565b60405180910390fd5b610b3b838383610e1e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb89061171c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610caf9190610ff8565b60405180910390a3610cc2848484610e23565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2e90611788565b60405180910390fd5b610d4360008383610e1e565b8060026000828254610d559190611330565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e069190610ff8565b60405180910390a3610e1a60008383610e23565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e62578082015181840152602081019050610e47565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e8a82610e28565b610e948185610e33565b9350610ea4818560208601610e44565b610ead81610e6e565b840191505092915050565b60006020820190508181036000830152610ed28184610e7f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0a82610edf565b9050919050565b610f1a81610eff565b8114610f2557600080fd5b50565b600081359050610f3781610f11565b92915050565b6000819050919050565b610f5081610f3d565b8114610f5b57600080fd5b50565b600081359050610f6d81610f47565b92915050565b60008060408385031215610f8a57610f89610eda565b5b6000610f9885828601610f28565b9250506020610fa985828601610f5e565b9150509250929050565b60008115159050919050565b610fc881610fb3565b82525050565b6000602082019050610fe36000830184610fbf565b92915050565b610ff281610f3d565b82525050565b600060208201905061100d6000830184610fe9565b92915050565b60008060006060848603121561102c5761102b610eda565b5b600061103a86828701610f28565b935050602061104b86828701610f28565b925050604061105c86828701610f5e565b9150509250925092565b60006020828403121561107c5761107b610eda565b5b600061108a84828501610f5e565b91505092915050565b600060ff82169050919050565b6110a981611093565b82525050565b60006020820190506110c460008301846110a0565b92915050565b6000602082840312156110e0576110df610eda565b5b60006110ee84828501610f28565b91505092915050565b61110081610eff565b82525050565b600060208201905061111b60008301846110f7565b92915050565b6000806040838503121561113857611137610eda565b5b600061114685828601610f28565b925050602061115785828601610f28565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111a857607f821691505b6020821081036111bb576111ba611161565b5b50919050565b7f4f6e6c7920746865206f776e65722063616e2077697468647261772066756e6460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061121d602183610e33565b9150611228826111c1565b604082019050919050565b6000602082019050818103600083015261124c81611210565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000611289601483610e33565b915061129482611253565b602082019050919050565b600060208201905081810360008301526112b88161127c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112f982610f3d565b915061130483610f3d565b925082820261131281610f3d565b91508282048414831517611329576113286112bf565b5b5092915050565b600061133b82610f3d565b915061134683610f3d565b925082820190508082111561135e5761135d6112bf565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006113c0602583610e33565b91506113cb82611364565b604082019050919050565b600060208201905081810360008301526113ef816113b3565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611452602483610e33565b915061145d826113f6565b604082019050919050565b6000602082019050818103600083015261148181611445565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114e4602283610e33565b91506114ef82611488565b604082019050919050565b60006020820190508181036000830152611513816114d7565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611550601d83610e33565b915061155b8261151a565b602082019050919050565b6000602082019050818103600083015261157f81611543565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115e2602583610e33565b91506115ed82611586565b604082019050919050565b60006020820190508181036000830152611611816115d5565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611674602383610e33565b915061167f82611618565b604082019050919050565b600060208201905081810360008301526116a381611667565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611706602683610e33565b9150611711826116aa565b604082019050919050565b60006020820190508181036000830152611735816116f9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611772601f83610e33565b915061177d8261173c565b602082019050919050565b600060208201905081810360008301526117a181611765565b905091905056fea2646970667358221220e967777b5a70f13fd1edbb668c8e5b35a14f59a61c033ff2aa703f74edfeea2c64736f6c63430008130033";

type MyContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyContract__factory extends ContractFactory {
  constructor(...args: MyContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      MyContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyContract__factory {
    return super.connect(runner) as MyContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractInterface {
    return new Interface(_abi) as MyContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyContract {
    return new Contract(address, _abi, runner) as unknown as MyContract;
  }
}
