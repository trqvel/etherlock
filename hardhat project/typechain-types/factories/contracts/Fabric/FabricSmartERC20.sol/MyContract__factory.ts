/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MyContract,
  MyContractInterface,
} from "../../../../contracts/Fabric/FabricSmartERC20.sol/MyContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c2938038062001c298339818101604052810190620000379190620001bd565b6040518060400160405280600881526020017f4d7920546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b00000000000000000000000000000000000000000000000000000000008152508160039081620000b491906200047e565b508060049081620000c691906200047e565b50505081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000565565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001858262000158565b9050919050565b620001978162000178565b8114620001a357600080fd5b50565b600081519050620001b7816200018c565b92915050565b60008060408385031215620001d757620001d662000153565b5b6000620001e785828601620001a6565b9250506020620001fa85828601620001a6565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028657607f821691505b6020821081036200029c576200029b6200023e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002c7565b620003128683620002c7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200035f6200035962000353846200032a565b62000334565b6200032a565b9050919050565b6000819050919050565b6200037b836200033e565b620003936200038a8262000366565b848454620002d4565b825550505050565b600090565b620003aa6200039b565b620003b781848462000370565b505050565b5b81811015620003df57620003d3600082620003a0565b600181019050620003bd565b5050565b601f8211156200042e57620003f881620002a2565b6200040384620002b7565b8101602085101562000413578190505b6200042b6200042285620002b7565b830182620003bc565b50505b505050565b600082821c905092915050565b6000620004536000198460080262000433565b1980831691505092915050565b60006200046e838362000440565b9150826002028217905092915050565b620004898262000204565b67ffffffffffffffff811115620004a557620004a46200020f565b5b620004b182546200026d565b620004be828285620003e3565b600060209050601f831160018114620004f65760008415620004e1578287015190505b620004ed858262000460565b8655506200055d565b601f1984166200050686620002a2565b60005b82811015620005305784890151825560018201915060208501945060208101905062000509565b868310156200055057848901516200054c601f89168262000440565b8355505b6001600288020188555050505b505050505050565b6116b480620005756000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806350baa622116100975780639d76ea58116100665780639d76ea5814610288578063a457c2d7146102a6578063a9059cbb146102d6578063dd62ed3e14610306576100f5565b806350baa6221461020057806370a082311461021c5780638da5cb5b1461024c57806395d89b411461026a576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce56714610196578063338b5dea146101b457806339509351146101d0576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610336565b60405161010f9190610e15565b60405180910390f35b610132600480360381019061012d9190610ed0565b6103c8565b60405161013f9190610f2b565b60405180910390f35b6101506103eb565b60405161015d9190610f55565b60405180910390f35b610180600480360381019061017b9190610f70565b6103f5565b60405161018d9190610f2b565b60405180910390f35b61019e610424565b6040516101ab9190610fdf565b60405180910390f35b6101ce60048036038101906101c99190610ed0565b61042d565b005b6101ea60048036038101906101e59190610ed0565b6104d4565b6040516101f79190610f2b565b60405180910390f35b61021a60048036038101906102159190610ffa565b61050b565b005b61023660048036038101906102319190611027565b610661565b6040516102439190610f55565b60405180910390f35b6102546106a9565b6040516102619190611063565b60405180910390f35b6102726106cf565b60405161027f9190610e15565b60405180910390f35b610290610761565b60405161029d9190611063565b60405180910390f35b6102c060048036038101906102bb9190610ed0565b610787565b6040516102cd9190610f2b565b60405180910390f35b6102f060048036038101906102eb9190610ed0565b6107fe565b6040516102fd9190610f2b565b60405180910390f35b610320600480360381019061031b919061107e565b610821565b60405161032d9190610f55565b60405180910390f35b606060038054610345906110ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610371906110ed565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b5050505050905090565b6000806103d36108a8565b90506103e08185856108b0565b600191505092915050565b6000600254905090565b6000806104006108a8565b905061040d858285610a79565b610418858585610b05565b60019150509392505050565b60006012905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b815260040161048c9392919061111e565b6020604051808303816000875af11580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf9190611181565b505050565b6000806104df6108a8565b90506105008185856104f18589610821565b6104fb91906111dd565b6108b0565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105929061125d565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161061a92919061127d565b6020604051808303816000875af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190611181565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546106de906110ed565b80601f016020809104026020016040519081016040528092919081815260200182805461070a906110ed565b80156107575780601f1061072c57610100808354040283529160200191610757565b820191906000526020600020905b81548152906001019060200180831161073a57829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806107926108a8565b905060006107a08286610821565b9050838110156107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90611318565b60405180910390fd5b6107f282868684036108b0565b60019250505092915050565b6000806108096108a8565b9050610816818585610b05565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361091f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610916906113aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361098e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109859061143c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a6c9190610f55565b60405180910390a3505050565b6000610a858484610821565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610aff5781811015610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae8906114a8565b60405180910390fd5b610afe84848484036108b0565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6b9061153a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610be3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bda906115cc565b60405180910390fd5b610bee838383610d7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6b9061165e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d629190610f55565b60405180910390a3610d75848484610d80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dbf578082015181840152602081019050610da4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610de782610d85565b610df18185610d90565b9350610e01818560208601610da1565b610e0a81610dcb565b840191505092915050565b60006020820190508181036000830152610e2f8184610ddc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6782610e3c565b9050919050565b610e7781610e5c565b8114610e8257600080fd5b50565b600081359050610e9481610e6e565b92915050565b6000819050919050565b610ead81610e9a565b8114610eb857600080fd5b50565b600081359050610eca81610ea4565b92915050565b60008060408385031215610ee757610ee6610e37565b5b6000610ef585828601610e85565b9250506020610f0685828601610ebb565b9150509250929050565b60008115159050919050565b610f2581610f10565b82525050565b6000602082019050610f406000830184610f1c565b92915050565b610f4f81610e9a565b82525050565b6000602082019050610f6a6000830184610f46565b92915050565b600080600060608486031215610f8957610f88610e37565b5b6000610f9786828701610e85565b9350506020610fa886828701610e85565b9250506040610fb986828701610ebb565b9150509250925092565b600060ff82169050919050565b610fd981610fc3565b82525050565b6000602082019050610ff46000830184610fd0565b92915050565b6000602082840312156110105761100f610e37565b5b600061101e84828501610ebb565b91505092915050565b60006020828403121561103d5761103c610e37565b5b600061104b84828501610e85565b91505092915050565b61105d81610e5c565b82525050565b60006020820190506110786000830184611054565b92915050565b6000806040838503121561109557611094610e37565b5b60006110a385828601610e85565b92505060206110b485828601610e85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061110557607f821691505b602082108103611118576111176110be565b5b50919050565b60006060820190506111336000830186611054565b6111406020830185611054565b61114d6040830184610f46565b949350505050565b61115e81610f10565b811461116957600080fd5b50565b60008151905061117b81611155565b92915050565b60006020828403121561119757611196610e37565b5b60006111a58482850161116c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111e882610e9a565b91506111f383610e9a565b925082820190508082111561120b5761120a6111ae565b5b92915050565b7f4f6e6c79206f776e65722063616e20776974686472617720746f6b656e730000600082015250565b6000611247601e83610d90565b915061125282611211565b602082019050919050565b600060208201905081810360008301526112768161123a565b9050919050565b60006040820190506112926000830185611054565b61129f6020830184610f46565b9392505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611302602583610d90565b915061130d826112a6565b604082019050919050565b60006020820190508181036000830152611331816112f5565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611394602483610d90565b915061139f82611338565b604082019050919050565b600060208201905081810360008301526113c381611387565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611426602283610d90565b9150611431826113ca565b604082019050919050565b6000602082019050818103600083015261145581611419565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611492601d83610d90565b915061149d8261145c565b602082019050919050565b600060208201905081810360008301526114c181611485565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611524602583610d90565b915061152f826114c8565b604082019050919050565b6000602082019050818103600083015261155381611517565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006115b6602383610d90565b91506115c18261155a565b604082019050919050565b600060208201905081810360008301526115e5816115a9565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611648602683610d90565b9150611653826115ec565b604082019050919050565b600060208201905081810360008301526116778161163b565b905091905056fea26469706673582212208500bf150627beac1da59be9f6d87cd8da6b69c1c0fdfe5a1d8f8a8e83293e9064736f6c63430008130033";

type MyContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyContract__factory extends ContractFactory {
  constructor(...args: MyContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, _tokenAddress, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, _tokenAddress, overrides || {}) as Promise<
      MyContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyContract__factory {
    return super.connect(runner) as MyContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractInterface {
    return new Interface(_abi) as MyContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyContract {
    return new Contract(address, _abi, runner) as unknown as MyContract;
  }
}
